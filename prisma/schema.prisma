// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id       String     @id @default(cuid())
    name     String     @unique
    email    String
    password String
    admin    Boolean
    image    String?
    Download Download[]
    WatchLog WatchLog[]
}

model Category {
    id       Int        @id @default(autoincrement())
    name     String
    parentId Int?
    parent   Category?  @relation("ParentChild", fields: [parentId], references: [id])
    children Category[] @relation("ParentChild")
    file     File[]
    Download Download[]
}

model Download {
    id             String   @id @default(cuid())
    name           String
    state          String
    transmissionId String?
    category       Category @relation(fields: [categoryId], references: [id])
    categoryId     Int      @default(0)
    File           File[]
    userId         String?
    User           User?    @relation(fields: [userId], references: [id])
}

model File {
    id         String     @id @default(cuid())
    name       String
    category   Category?  @relation(fields: [categoryId], references: [id])
    categoryId Int?
    download   Download?  @relation(fields: [downloadId], references: [id], onDelete: Cascade)
    downloadId String?
    metadata   String?    @default("{}")
    mimetype   String?
    area       String     @default("video")
    parentId   String?
    parent     File?      @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
    children   File[]     @relation("ParentChild")
    WatchLog   WatchLog[]
}

model WatchLog {
    id         Int      @id @default(autoincrement())
    userId     String?
    User       User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
    fileId     String
    File       File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
    created_at DateTime @default(now())
}
